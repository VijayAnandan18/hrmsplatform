rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Rules for oftenusers collection
    match /oftenusers/{userId}/files/{fileId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.resource.data.keys().hasAll(['name', 'category', 'url', 'uploadedAt']) &&
                    request.resource.data.name is string &&
                    request.resource.data.category is string &&
                    request.resource.data.url is string &&
                    request.resource.data.uploadedAt is timestamp;
    }

    // Rules for employees collection
    match /employees/{employeeId} {
      allow read, write: if request.auth != null; // Allow authenticated users
    }

    // Rules for leavesettings collection
    match /leavesettings/{documentId} {
      allow read, write: if request.auth != null; // Allow if authenticated
    }
// Rules for employee timings collection
match /employeetimings/{employeeId}/datas/{docId} {
  allow read, write: if request.auth != null; // Allow authenticated users
}
match /checkinouts/{userId}/{documentId} {
  allow read, write: if request.auth != null && request.auth.uid == userId;
}

    // Rules for groups and tasks
    match /groups/{userId}/tasks/{taskId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
      match /faqs/{faqId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    // Deny access to all other documents by default
    match /{document=**} {
      allow read, write: if false; // Deny access to other documents
    }

    // Allow read and write for authenticated users
    match /{document=**} {
      allow read, write: if request.auth != null; // Allow if authenticated
    }
  }
}

